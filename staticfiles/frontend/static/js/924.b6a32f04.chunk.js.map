{"version":3,"file":"static/js/924.b6a32f04.chunk.js","mappings":"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","sources":["components/product/ShopTopFilter.js","components/product/ShopTopActionFilter.js","wrappers/product/ShopTopbarFilter.js","pages/ShopGridFilter.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,  \r\n  setActiveSort\r\n} from \"../../helpers/product\";\r\n\r\nconst ShopTopFilter = ({ products, getSortParams }) => {\r\n  const uniqueCategories = getIndividualCategories(products); \r\n  const uniqueTags = getIndividualTags(products);  \r\n  return (\r\n    <div className=\"product-filter-wrapper\" id=\"product-filter-wrapper\">\r\n      <div className=\"product-filter-wrapper__inner\">\r\n        <div className=\"row\">\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter\">\r\n              <h5>Categories</h5>\r\n              {uniqueCategories ? (\r\n                <ul>\r\n                  {uniqueCategories.map((category, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"category\", category);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {category}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No categories found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* Product Filter */}\r\n          <div className=\"col-md-3 col-sm-6 col-xs-12 mb-30\">\r\n            <div className=\"product-filter product-filter--tag\">\r\n              <h5>Tag</h5>\r\n              {uniqueTags ? (\r\n                <ul>\r\n                  {uniqueTags.map((tag, key) => {\r\n                    return (\r\n                      <li key={key}>\r\n                        <button\r\n                          onClick={e => {\r\n                            getSortParams(\"tag\", tag);\r\n                            setActiveSort(e);\r\n                          }}\r\n                        >\r\n                          {tag}\r\n                        </button>\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              ) : (\r\n                \"No tags found\"\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopFilter.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopTopFilter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopFilter from \"./ShopTopFilter\";\r\nimport { toggleShopTopFilter } from \"../../helpers/product\";\r\n\r\nconst ShopTopActionFilter = ({\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  products,\r\n  getSortParams\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"shop-top-bar mb-35\">\r\n        <div className=\"select-shoing-wrap\">\r\n          <div className=\"shop-select\">\r\n            <select\r\n              onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"priceHighToLow\">Price - High to Low</option>\r\n              <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n            </select>\r\n          </div>\r\n          <p>\r\n            Showing {sortedProductCount} of {productCount} result\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"filter-active\">\r\n          <button onClick={e => toggleShopTopFilter(e)}>\r\n            <i className=\"fa fa-plus text-light\"></i> filter\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* shop top filter */}\r\n      <ShopTopFilter products={products} getSortParams={getSortParams} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopActionFilter.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getSortParams: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  products: PropTypes.array,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopActionFilter;\r\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopActionFilter from \"../../components/product/ShopTopActionFilter\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount,\n  products,\n  getSortParams\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopActionFilter\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n        products={products}\n        getSortParams={getSortParams}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  getSortParams: PropTypes.func,\n  productCount: PropTypes.number,\n  products: PropTypes.array,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport Layout from \"../layouts/Layout\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbarFilter from \"../wrappers/product/ShopTopbarFilter\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\n\r\nconst ShopGridFilter = () => {\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 15;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of flone react minimalist eCommerce template.\"\r\n      />\r\n\r\n      <Layout headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar filter */}\r\n                <ShopTopbarFilter\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopGridFilter;\r\n"],"names":["_ref","products","getSortParams","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualTags","_jsx","className","id","children","_jsxs","map","category","key","onClick","e","setActiveSort","tag","getFilterSortParams","productCount","sortedProductCount","Fragment","onChange","target","value","toggleShopTopFilter","ShopTopFilter","getLayout","ShopTopActionFilter","ShopGridFilter","layout","setLayout","useState","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","slice","SEO","titleTemplate","description","Layout","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","ShopTopbarFilter","length","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"sourceRoot":""}