{"version":3,"file":"static/js/13.69ab5c69.chunk.js","mappings":"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","sources":["components/alert.js","layouts/LayoutTwo.js","pages/ResetPassword.js","store/api/auth.js","wrappers/breadcrumb/Breadcrumb.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = (props) => {\r\n    const [classAlert, setClassAlert] = useState(\"alert\");\r\n    const handleClose = () => {\r\n        setClassAlert(\"alert d-none\");\r\n        props.closeAlert();\r\n    };\r\n    return (\r\n        <div className={classAlert}>\r\n            <div className=\"d-flex\">\r\n                <div className=\"toast-body\">{props.message}</div>\r\n                <div className=\"button btn-close me-2 m-auto\" type=\"button\" onClick={handleClose}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useVerifyMutation,\r\n  useGetUserQuery,\r\n  useGoogleLoginMutation,\r\n} from \"../store/api/auth\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Alert from \"../components/alert\";\r\nimport Header from \"./partials/Header\";\r\nimport Footer from \"./partials/Footer\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst LayoutTwo = ({ children }) => {\r\n  let location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.auth.userInfo);\r\n  const message = useSelector((state) => state.auth.message);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n  const [verify] = useVerifyMutation();\r\n  const { data: userData } = useGetUserQuery();\r\n  const [googleLogin] = useGoogleLoginMutation();\r\n  \r\n  useEffect(() => {\r\n    const values = queryString.parse(location.search);\r\n    const code = values.code;\r\n    if (code) {\r\n      dispatch(googleLogin(code));\r\n    } else {\r\n      if (user) {\r\n        dispatch(verify(token));\r\n      }\r\n    }\r\n  }, [location]);\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        headerTop=\"visible\"\r\n        top=\"\"\r\n        headerPaddingClass=\"\"\r\n        headerPositionClass=\"\"\r\n      />\r\n    <ToastContainer position=\"top-right\" />\r\n      {message ? <Alert message={message} /> : null}\r\n      {children}\r\n\r\n      <Footer\r\n        backgroundColorClass=\"footer-white\"\r\n        spaceLeftClass=\"ml-70\"\r\n        spaceRightClass=\"mr-70\"\r\n        footerTopBackgroundColorClass=\"bg-gray-2\"\r\n        footerTopSpaceTopClass=\"pt-80\"\r\n        footerTopSpaceBottomClass=\"pb-60\"\r\n        copyrightColorClass=\"copyright-white\"\r\n        footerLogo=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/logo_no_pad.png\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nLayoutTwo.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default LayoutTwo;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate, Navigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useResetPasswordMutation } from \"../store/api/auth\";\r\nimport LayoutTwo from \"../layouts/LayoutTwo\";\r\nimport SEO from \"../components/seo\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport { setMessage } from \"../store/slices/auth-slice\";\r\n\r\nconst ResetPassword = () => {\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n  const { email } = formData;\r\n  \r\n  const [resetPassword, { isLoading, error, isError }] =\r\n    useResetPasswordMutation();\r\n  \r\n    const handlingInput = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  \r\n  const handlingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n        const reset = await resetPassword(formData);\r\n        console.log(\"Password reset Success!!\", reset); // Debug log\r\n        } catch (err) {\r\n        dispatch(setMessage(\"Login has failed.\", err));\r\n        console.error(\"Failed to login:\", err);\r\n      }\r\n    setStatus(true);\r\n  };\r\n  if (status) {\r\n    return <Navigate to={\"../\"}></Navigate>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Login\"\r\n        description=\"Login page of The Cage SShop Online | Vape and Smoke Accessories.\"\r\n      />\r\n      <LayoutTwo>\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Login\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n        <Container className=\"py-4 login-form-container\">\r\n          <div className=\"main-box\">\r\n            <h2 className=\"text-center mb-4\">Reset Password</h2>\r\n            <h5 className=\"text-center mb-4\">\r\n              Please input your registered email. The link for set your new\r\n              password will be stent into your email\r\n            </h5>\r\n            <form className=\"mb-3\" onSubmit={(e) => handlingSubmit(e)}>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => handlingInput(e)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  placeholder=\"name@example.com\"\r\n                />\r\n              </div>\r\n              <div className=\"d-grid gap-2\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Send Link\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </LayoutTwo>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nexport const authApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Login\r\n    login: builder.mutation({\r\n      // export const login = ( email, password )\r\n      query: (credentials) => ({\r\n        url: \"auth/dj-rest-auth/login/\",\r\n        method: \"POST\",\r\n        body: credentials,\r\n      }),\r\n    }),\r\n    // Verify Token\r\n    verify: builder.mutation({\r\n      query: (token) => ({\r\n        url: \"auth/dj-rest-auth/token/verify/\",\r\n        method: \"POST\",\r\n        body: { token },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Get User\r\n    getUser: builder.query({\r\n      query: () => \"auth/dj-rest-auth/user/\",\r\n      providesTags: [\"Auth\"],\r\n    }),\r\n    // Refresh Token\r\n    refresh: builder.mutation({\r\n      query: () => ({\r\n        url: \"auth/dj-rest-auth/token/refresh/\",\r\n        method: \"POST\",\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Change Password\r\n    changePassword: builder.mutation({\r\n      // export const changePassword = ( new_password1, new_password2, old_password )\r\n      query: (passwords) => ({\r\n        url: \"auth/dj-rest-auth/password/change/\",\r\n        method: \"POST\",\r\n        body: passwords,\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Logout\r\n    logout: builder.mutation({\r\n      query: () => ({\r\n        url: \"auth/dj-rest-auth/logout/\",\r\n        method: \"POST\",\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Signup\r\n    register: builder.mutation({\r\n      // export const signup = ( email, first_name, last_name, password1, password2 )\r\n      query: (userData) => ({\r\n        url: \"auth/dj-rest-auth/registration/\",\r\n        method: \"POST\",\r\n        body: userData,\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Email Verification\r\n    emailVerification: builder.mutation({\r\n      query: (key) => ({\r\n        url: \"auth/dj-rest-auth/registration/verify-email/\",\r\n        method: \"POST\",\r\n        body: { key },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Reset Password\r\n    resetPassword: builder.mutation({\r\n      query: (email) => ({\r\n        url: \"auth/dj-rest-auth/password/reset/\",\r\n        method: \"POST\",\r\n        body: { email },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Reset Password Confirm\r\n    resetPasswordConfirm: builder.mutation({\r\n      // export const resetPasswordConfirm = ( uid, token, new_password1, new_password2 )\r\n      query: (data) => ({\r\n        url: \"auth/dj-rest-auth/password/reset/confirm/\",\r\n        method: \"POST\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Google Authentication\r\n    googleLogin: builder.mutation({\r\n      query: (code) => ({\r\n        url: \"auth/dj-rest-auth/google/\",\r\n        method: \"POST\",\r\n        body: { code },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Facebook Authentication\r\n    facebookLogin: builder.mutation({\r\n      query: (code) => ({\r\n        url: \"auth/dj-rest-auth/facebook/\",\r\n        method: \"POST\",\r\n        body: { code },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useLoginMutation,\r\n  useVerifyMutation,\r\n  useGetUserQuery,\r\n  useRefreshMutation,\r\n  useChangePasswordMutation,\r\n  useLogoutMutation,\r\n  useRegisterMutation,\r\n  useEmailVerificationMutation,\r\n  useResetPasswordMutation,\r\n  useResetPasswordConfirmMutation,\r\n  useGoogleLoginMutation,\r\n  useFacebookLoginMutation,\r\n} = authApi;\r\n","import PropTypes from \"prop-types\";\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { Link } from \"react-router-dom\";\n\nconst BreadcrumbWrap = ({pages, backgroundImage}) => {\n  return (\n    <div className=\"breadcrumb-area pt-120 pb-120 bg-gray-3 bg-img\"\n    style={{\n      backgroundImage: ` ${\n        backgroundImage\n          ? `url(${process.env.PUBLIC_URL + backgroundImage})`\n          : `url()`\n      }`\n    }}\n    >\n      <div className=\"container\">\n        <Breadcrumb>\n            {pages?.map(({ path, label }, i) => i !== pages.length - 1 ? (\n                <Breadcrumb.Item key={label} linkProps={{to: path}} linkAs={Link}>\n                  {label}\n                </Breadcrumb.Item>\n            ) : (                \n              <Breadcrumb.Item key={label} active>\n                {label}\n              </Breadcrumb.Item>\n            ))}\n        </Breadcrumb>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbWrap.propTypes = {\n  pages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired\n  })).isRequired\n}\n\nexport default BreadcrumbWrap;\n"],"names":["props","classAlert","setClassAlert","useState","_jsx","className","children","_jsxs","message","type","onClick","handleClose","closeAlert","_ref","location","useLocation","dispatch","useDispatch","user","useSelector","state","auth","userInfo","token","verify","isAuthenticated","useVerifyMutation","data","userData","useGetUserQuery","googleLogin","useGoogleLoginMutation","useEffect","code","queryString","parse","search","Fragment","Header","headerTop","top","headerPaddingClass","headerPositionClass","ToastContainer","position","Alert","Footer","backgroundColorClass","spaceLeftClass","spaceRightClass","footerTopBackgroundColorClass","footerTopSpaceTopClass","footerTopSpaceBottomClass","copyrightColorClass","footerLogo","ResetPassword","pathname","useNavigate","status","setStatus","formData","setFormData","email","resetPassword","isLoading","error","isError","useResetPasswordMutation","Navigate","to","SEO","titleTemplate","description","LayoutTwo","Breadcrumb","pages","label","path","process","backgroundImage","Container","onSubmit","e","async","preventDefault","reset","console","log","err","setMessage","handlingSubmit","htmlFor","name","value","onChange","_objectSpread","target","handlingInput","id","placeholder","authApi","apiSlice","injectEndpoints","endpoints","builder","login","mutation","query","credentials","url","method","body","invalidatesTags","getUser","providesTags","refresh","changePassword","passwords","logout","register","emailVerification","key","resetPasswordConfirm","facebookLogin","useLoginMutation","useRefreshMutation","useChangePasswordMutation","useLogoutMutation","useRegisterMutation","useEmailVerificationMutation","useResetPasswordConfirmMutation","useFacebookLoginMutation","style","concat","map","_ref2","i","length","Item","linkProps","linkAs","Link","active"],"sourceRoot":""}