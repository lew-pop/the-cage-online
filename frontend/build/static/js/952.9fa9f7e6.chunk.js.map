{"version":3,"file":"static/js/952.9fa9f7e6.chunk.js","mappings":"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","sources":["components/util/Loader.js","components/util/Message.js","components/alert.js","layouts/LayoutTwo.js","pages/Register.js","store/api/auth.js","wrappers/breadcrumb/Breadcrumb.js"],"sourcesContent":["import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='grow'\n            size=\"sm\"\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block',\n                backgroundColor: '#7c65a9'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert \n        variant={variant}\n        style={{\n            position: 'fixed',\n            top: '20px',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            zIndex: 1000,\n            minWidth: '300px',\n            textAlign: 'center'\n        }}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = (props) => {\r\n    const [classAlert, setClassAlert] = useState(\"alert\");\r\n    const handleClose = () => {\r\n        setClassAlert(\"alert d-none\");\r\n        props.closeAlert();\r\n    };\r\n    return (\r\n        <div className={classAlert}>\r\n            <div className=\"d-flex\">\r\n                <div className=\"toast-body\">{props.message}</div>\r\n                <div className=\"button btn-close me-2 m-auto\" type=\"button\" onClick={handleClose}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useVerifyMutation,\r\n  useGetUserQuery,\r\n  useGoogleLoginMutation,\r\n} from \"../store/api/auth\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Alert from \"../components/alert\";\r\nimport Header from \"./partials/Header\";\r\nimport Footer from \"./partials/Footer\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst LayoutTwo = ({ children }) => {\r\n  let location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.auth.userInfo);\r\n  const message = useSelector((state) => state.auth.message);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n  const [verify] = useVerifyMutation();\r\n  const { data: userData } = useGetUserQuery();\r\n  const [googleLogin] = useGoogleLoginMutation();\r\n  \r\n  useEffect(() => {\r\n    const values = queryString.parse(location.search);\r\n    const code = values.code;\r\n    if (code) {\r\n      dispatch(googleLogin(code));\r\n    } else {\r\n      if (user) {\r\n        dispatch(verify(token));\r\n      }\r\n    }\r\n  }, [location]);\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        headerTop=\"visible\"\r\n        top=\"\"\r\n        headerPaddingClass=\"\"\r\n        headerPositionClass=\"\"\r\n      />\r\n    <ToastContainer position=\"top-right\" />\r\n      {message ? <Alert message={message} /> : null}\r\n      {children}\r\n\r\n      <Footer\r\n        backgroundColorClass=\"footer-white\"\r\n        spaceLeftClass=\"ml-70\"\r\n        spaceRightClass=\"mr-70\"\r\n        footerTopBackgroundColorClass=\"bg-gray-2\"\r\n        footerTopSpaceTopClass=\"pt-80\"\r\n        footerTopSpaceBottomClass=\"pb-60\"\r\n        copyrightColorClass=\"copyright-white\"\r\n        footerLogo=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/logo_no_pad.png\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nLayoutTwo.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default LayoutTwo;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate, Navigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserInfo } from \"../store/slices/auth-slice\";\r\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Loader from \"../components/util/Loader\";\r\nimport Message from \"../components/util/Message\";\r\nimport FormContainer from \"../components/util/FormContainer\";\r\nimport SEO from \"../components/seo\";\r\nimport LayoutTwo from \"../layouts/LayoutTwo\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport { useRegisterMutation } from \"../store/api/auth\";\r\n\r\nconst Register = () => {\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [registerUser, { isLoading, error, isError }] = useRegisterMutation();\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [status, setStatus] = useState(false);\r\n  const [shouldNavigate, setShouldNavigate] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n  });\r\n  const { email, first_name, last_name, password1, password2 } = formData;\r\n\r\n  const user = useSelector((state) => state.auth.userInfo);\r\n  useEffect(() => {\r\n    if (user) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [user, navigate]);\r\n  const handlingInput = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handlingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const registeredUser = await registerUser(formData).unwrap();\r\n      setMessage(\"Check your email for a confirmation link!\");\r\n      console.log(\"User Registered Successfully!!\", registeredUser); // Debug log\r\n    } catch (err) {\r\n      console.error(\"Failed to register:\", err);\r\n      setMessage(\"Registration failed. Please try again.\");\r\n    }\r\n    setStatus(true);\r\n    setTimeout(() => {\r\n      setShouldNavigate(true);\r\n    }, 2000);\r\n  };\r\n\r\n  if (status) {\r\n    return (\r\n      <div>\r\n        {message && <Message variant=\"info\">{message}</Message>}\r\n        {shouldNavigate && navigate(\"/login\")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Register\"\r\n        description=\"Register page of The Cage SShop Online | Vape and Smoke Accessories.\"\r\n      />\r\n      <LayoutTwo headerTop=\"visible\">\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Register\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n        <Container className=\"py-4 login-form-container\">\r\n          {message && (\r\n            <Message\r\n              variant={\r\n                message.includes(\"Check your email\") ? \"success\" : \"danger\"\r\n              }\r\n            >\r\n              {message}\r\n            </Message>\r\n          )}\r\n          {isError && (\r\n            <Message variant=\"danger\">\r\n              {error?.data?.detail || error.error}\r\n            </Message>\r\n          )}\r\n          {isLoading ? (\r\n            <div className=\"main-box d-flex justify-content-center align-items-center\">\r\n              <Loader />\r\n            </div>\r\n          ) : (\r\n            <div className=\"main-box\">\r\n              <h2 className=\"text-center mb-4\">Register</h2>\r\n              <form className=\"mb-3\" onSubmit={(e) => handlingSubmit(e)}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"first_name\" className=\"form-label\">\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    name=\"first_name\"\r\n                    value={first_name}\r\n                    onChange={(e) => handlingInput(e)}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"first_name\"\r\n                    placeholder=\"First name ...\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"last_name\" className=\"form-label\">\r\n                    Last Name\r\n                  </label>\r\n                  <input\r\n                    name=\"last_name\"\r\n                    value={last_name}\r\n                    onChange={(e) => handlingInput(e)}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"last_name\"\r\n                    placeholder=\"Last name ...\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                    Email address\r\n                  </label>\r\n                  <input\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => handlingInput(e)}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    placeholder=\"name@example.com\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"password1\" className=\"form-label\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    name=\"password1\"\r\n                    value={password1}\r\n                    onChange={(e) => handlingInput(e)}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password1\"\r\n                    placeholder=\"Password ...\"\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"password2\" className=\"form-label\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    onChange={(e) => handlingInput(e)}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password2\"\r\n                    placeholder=\"Password ...\"\r\n                  />\r\n                </div>\r\n                <div className=\"d-grid gap-2\">\r\n                  <button className=\"btn login-button\" type=\"submit\">\r\n                    Register\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <p className=\"text-light\">\r\n                Already have an account? <Link className=\"login-link\" to={\"../login/\"}>Login</Link>\r\n              </p>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </LayoutTwo>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nexport const authApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Login\r\n    login: builder.mutation({\r\n      // export const login = ( email, password )\r\n      query: (credentials) => ({\r\n        url: \"auth/dj-rest-auth/login/\",\r\n        method: \"POST\",\r\n        body: credentials,\r\n      }),\r\n    }),\r\n    // Verify Token\r\n    verify: builder.mutation({\r\n      query: (token) => ({\r\n        url: \"auth/dj-rest-auth/token/verify/\",\r\n        method: \"POST\",\r\n        body: { token },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Get User\r\n    getUser: builder.query({\r\n      query: () => \"auth/dj-rest-auth/user/\",\r\n      providesTags: [\"Auth\"],\r\n    }),\r\n    // Refresh Token\r\n    refresh: builder.mutation({\r\n      query: () => ({\r\n        url: \"auth/dj-rest-auth/token/refresh/\",\r\n        method: \"POST\",\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Change Password\r\n    changePassword: builder.mutation({\r\n      // export const changePassword = ( new_password1, new_password2, old_password )\r\n      query: (passwords) => ({\r\n        url: \"auth/dj-rest-auth/password/change/\",\r\n        method: \"POST\",\r\n        body: passwords,\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Logout\r\n    logout: builder.mutation({\r\n      query: () => ({\r\n        url: \"auth/dj-rest-auth/logout/\",\r\n        method: \"POST\",\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Signup\r\n    register: builder.mutation({\r\n      // export const signup = ( email, first_name, last_name, password1, password2 )\r\n      query: (userData) => ({\r\n        url: \"auth/dj-rest-auth/registration/\",\r\n        method: \"POST\",\r\n        body: userData,\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Email Verification\r\n    emailVerification: builder.mutation({\r\n      query: (key) => ({\r\n        url: \"auth/dj-rest-auth/registration/verify-email/\",\r\n        method: \"POST\",\r\n        body: { key },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Reset Password\r\n    resetPassword: builder.mutation({\r\n      query: (email) => ({\r\n        url: \"auth/dj-rest-auth/password/reset/\",\r\n        method: \"POST\",\r\n        body: { email },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Reset Password Confirm\r\n    resetPasswordConfirm: builder.mutation({\r\n      // export const resetPasswordConfirm = ( uid, token, new_password1, new_password2 )\r\n      query: (data) => ({\r\n        url: \"auth/dj-rest-auth/password/reset/confirm/\",\r\n        method: \"POST\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Google Authentication\r\n    googleLogin: builder.mutation({\r\n      query: (code) => ({\r\n        url: \"auth/dj-rest-auth/google/\",\r\n        method: \"POST\",\r\n        body: { code },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n    // Facebook Authentication\r\n    facebookLogin: builder.mutation({\r\n      query: (code) => ({\r\n        url: \"auth/dj-rest-auth/facebook/\",\r\n        method: \"POST\",\r\n        body: { code },\r\n      }),\r\n      invalidatesTags: [\"Auth\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useLoginMutation,\r\n  useVerifyMutation,\r\n  useGetUserQuery,\r\n  useRefreshMutation,\r\n  useChangePasswordMutation,\r\n  useLogoutMutation,\r\n  useRegisterMutation,\r\n  useEmailVerificationMutation,\r\n  useResetPasswordMutation,\r\n  useResetPasswordConfirmMutation,\r\n  useGoogleLoginMutation,\r\n  useFacebookLoginMutation,\r\n} = authApi;\r\n","import PropTypes from \"prop-types\";\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { Link } from \"react-router-dom\";\n\nconst BreadcrumbWrap = ({pages, backgroundImage}) => {\n  return (\n    <div className=\"breadcrumb-area pt-120 pb-120 bg-gray-3 bg-img\"\n    style={{\n      backgroundImage: ` ${\n        backgroundImage\n          ? `url(${process.env.PUBLIC_URL + backgroundImage})`\n          : `url()`\n      }`\n    }}\n    >\n      <div className=\"container\">\n        <Breadcrumb>\n            {pages?.map(({ path, label }, i) => i !== pages.length - 1 ? (\n                <Breadcrumb.Item key={label} linkProps={{to: path}} linkAs={Link}>\n                  {label}\n                </Breadcrumb.Item>\n            ) : (                \n              <Breadcrumb.Item key={label} active>\n                {label}\n              </Breadcrumb.Item>\n            ))}\n        </Breadcrumb>\n      </div>\n    </div>\n  );\n};\n\nBreadcrumbWrap.propTypes = {\n  pages: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired\n  })).isRequired\n}\n\nexport default BreadcrumbWrap;\n"],"names":["_jsx","Spinner","animation","size","role","style","height","width","margin","display","backgroundColor","children","className","_ref","variant","Alert","position","top","left","transform","zIndex","minWidth","textAlign","props","classAlert","setClassAlert","useState","_jsxs","message","type","onClick","handleClose","closeAlert","location","useLocation","dispatch","useDispatch","user","useSelector","state","auth","userInfo","token","verify","isAuthenticated","useVerifyMutation","data","userData","useGetUserQuery","googleLogin","useGoogleLoginMutation","useEffect","code","queryString","parse","search","Fragment","Header","headerTop","headerPaddingClass","headerPositionClass","ToastContainer","Footer","backgroundColorClass","spaceLeftClass","spaceRightClass","footerTopBackgroundColorClass","footerTopSpaceTopClass","footerTopSpaceBottomClass","copyrightColorClass","footerLogo","Register","_error$data","pathname","navigate","useNavigate","registerUser","isLoading","error","isError","useRegisterMutation","confirmPassword","setConfirmPassword","setMessage","status","setStatus","shouldNavigate","setShouldNavigate","formData","setFormData","email","first_name","last_name","password1","password2","handlingInput","e","_objectSpread","target","name","value","Message","SEO","titleTemplate","description","LayoutTwo","Breadcrumb","pages","label","path","process","backgroundImage","Container","includes","detail","Loader","onSubmit","async","preventDefault","registeredUser","unwrap","console","log","err","setTimeout","handlingSubmit","htmlFor","onChange","id","placeholder","Link","to","authApi","apiSlice","injectEndpoints","endpoints","builder","login","mutation","query","credentials","url","method","body","invalidatesTags","getUser","providesTags","refresh","changePassword","passwords","logout","register","emailVerification","key","resetPassword","resetPasswordConfirm","facebookLogin","useLoginMutation","useRefreshMutation","useChangePasswordMutation","useLogoutMutation","useEmailVerificationMutation","useResetPasswordMutation","useResetPasswordConfirmMutation","useFacebookLoginMutation","concat","map","_ref2","i","length","Item","linkProps","linkAs","active"],"sourceRoot":""}