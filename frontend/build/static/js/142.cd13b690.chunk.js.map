{"version":3,"file":"static/js/142.cd13b690.chunk.js","mappings":"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","sources":["pages/ShopGridStandard.js","store/api/product.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../helpers/product\";\r\nimport SEO from \"../components/seo\";\r\nimport Layout from \"../layouts/Layout\";\r\nimport Breadcrumb from \"../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../wrappers/product/ShopProducts\";\r\n\r\nconst ShopGridStandard = () => {\r\n  const [layout, setLayout] = useState(\"grid three-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 15;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = (layout) => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of flone react minimalist eCommerce template.\"\r\n      />\r\n\r\n      <Layout headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb\r\n          pages={[\r\n            { label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            { label: \"Shop\", path: process.env.PUBLIC_URL + pathname },\r\n          ]}\r\n          backgroundImage=\"https://the-cage-online-assets.s3.us-west-1.amazonaws.com/build/breadcrumb-light.png\"\r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopGridStandard;\r\n","import { apiSlice } from \"./apiSlice\";\r\n\r\nexport const productApi = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    // Product endpoints\r\n    listProducts: builder.query({\r\n      query: () =>  `products/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByCategory: builder.query({\r\n      query: (category) => `products/category/${category}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listProductsByTag: builder.query({\r\n      query: (id) => `products/tag/${id}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    listTopProducts: builder.query({\r\n      query: () => 'products/top/',\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    getProduct: builder.query({\r\n      query: (id) => `products/${id}/`, // Replace with your actual API endpoint\r\n      providesTags: (result, error, id) => [{ type: 'Product', id }],\r\n    }),\r\n    getProducts: builder.query({\r\n      query: (queryTerm) =>  `products/query/${queryTerm}/`,\r\n      providesTags: [\"Product\"],\r\n    }),\r\n    deleteProduct: builder.mutation({\r\n      query: (id) => ({\r\n        url: `products/delete/${id}/`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    createProduct: builder.mutation({\r\n      query: () => ({\r\n        url: 'products/create/',\r\n        method: 'POST',\r\n        body: {},\r\n      }),\r\n      invalidatesTags: [\"Product\"],\r\n    }),\r\n    updateProduct: builder.mutation({\r\n      query: (product) => ({\r\n        url: `products/update/${product.id}/`,\r\n        method: 'PUT',\r\n        body: product,\r\n      }),\r\n      invalidatesTags: (result, error, product) => [{ type: 'Product', id: product.id }],\r\n    }),\r\n    createProductReview: builder.mutation({\r\n      query: ({ productId, review }) => ({\r\n        url: `products/${productId}/reviews/`,\r\n        method: 'POST',\r\n        body: review,\r\n      }),\r\n      invalidatesTags: (result, error, { productId }) => [{ type: 'Product', id: productId }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useListProductsQuery,\r\n  useListProductsByCategoryQuery,\r\n  useListProductsByTagQuery,\r\n  useListTopProductsQuery,\r\n  useGetProductQuery,\r\n  useGetProductsQuery,\r\n  useDeleteProductMutation,\r\n  useCreateProductMutation,\r\n  useUpdateProductMutation,\r\n  useCreateProductReviewMutation,\r\n} = productApi;\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useListProductsByTagQuery } from \"../../store/api/product\";\r\n\r\n\r\nconst ShopSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const HandleSearch = (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    // Fetch products from backend using searchTerm\r\n    const { data, isLoading, error } = useListProductsByTagQuery(searchTerm);\r\n    \r\n    if (isLoading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n    \r\n    navigate(`/shop-filtered-grid/${data}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" onSubmit={HandleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search here...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  const navigate = useNavigate();\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      navigate(`/shop-catalog/${query}`);\r\n    }    \r\n  }, [query]);\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                      setQuery(tag)\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getIndividualCategories,\n  getIndividualTags,\n  getIndividualColors,\n  getProductsIndividualSizes,\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopTag from \"../../components/product/ShopTag\";\n\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\n  const uniqueCategories = getIndividualCategories(products);\n  const uniqueTags = getIndividualTags(products);\n\n  return (\n    <div className={clsx(\"sidebar-style\", sideSpaceClass)}>\n      {/* shop search */}\n      <ShopSearch />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by tag */}\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string,\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\r\n\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  \r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div>\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopAction\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n"],"names":["ShopGridStandard","layout","setLayout","useState","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","products","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","slice","_jsxs","Fragment","children","_jsx","SEO","titleTemplate","description","Layout","headerTop","Breadcrumb","pages","label","path","process","backgroundImage","className","ShopSidebar","getSortParams","sideSpaceClass","ShopTopbar","getLayout","getFilterSortParams","productCount","length","sortedProductCount","ShopProducts","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText","productApi","apiSlice","injectEndpoints","endpoints","builder","listProducts","query","providesTags","listProductsByCategory","category","concat","listProductsByTag","id","listTopProducts","getProduct","result","error","type","getProducts","queryTerm","deleteProduct","mutation","url","method","invalidatesTags","createProduct","body","updateProduct","createProductReview","_ref","productId","review","_ref2","useListProductsQuery","useListProductsByCategoryQuery","useListProductsByTagQuery","useListTopProductsQuery","useGetProductQuery","useGetProductsQuery","useDeleteProductMutation","useCreateProductMutation","useUpdateProductMutation","useCreateProductReviewMutation","ShopSearch","searchTerm","setSearchTerm","navigate","useNavigate","onSubmit","e","preventDefault","data","isLoading","message","placeholder","value","onChange","target","categories","onClick","setActiveSort","map","key","tags","setQuery","tag","uniqueCategories","getIndividualCategories","uniqueTags","getIndividualTags","clsx","ShopCategories","ShopTag","setActiveLayout","ShopTopAction"],"sourceRoot":""}